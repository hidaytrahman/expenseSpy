{"version":3,"sources":["components/shared/footer/Footer.js","components/shared/header/Header.js","hooks/useProgress.js","store/expenseStore.js","store/index.js","core/materialUtils.js","components/tracker/list/TrackerList.js","core/utils.js","core/date.js","core/constant.js","components/tracker/add/AddItem.js","components/tracker/board/Board.js","components/tracker/Tracker.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","href","Header","useState","darkMode","setDarkMode","useEffect","localStorage","getItem","document","body","classList","add","remove","FormGroup","FormControlLabel","control","Switch","checked","onChange","toggle","theme","contains","setItem","label","useProgress","completed","target","progress","setProgress","c","Math","ceil","expenseStore","rootStore","expenses","JSON","parse","this","makeAutoObservable","trackerData","dataset","type","trackerType","date","month","trackerMonth","day","Date","getUTCDate","year","getFullYear","title","trackerTitle","amount","trackerAmount","info","trackerNotes","categories","trackerCategory","created","push","stringify","index","newData","updated","splice","filter","item","RootStore","StoresContext","createContext","useStores","useContext","LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","CircularProgressWithLabel","position","CircularProgress","top","left","bottom","right","justifyContent","Typography","component","color","round","value","observer","setExpandList","expandList","sortBy","setSortBy","length","Button","onClick","getIncomeList","getExpenseList","IconButton","List","exp","includes","map","expense","Card","CardContent","Chip","size","deleteExpense","getIncomeAmountList","trackerList","parseInt","getExpenseAmountList","monthList","currentMonth","getMonth","trackerCategoryList","income","showList","setShowList","refTodo","useRef","setTrackerMonth","setTrackerType","setTrackerCategory","setTrackerTitle","setTrackerAmount","setTrackerNotes","message","setMessage","onSubmit","e","preventDefault","console","log","addExpense","current","focus","FormControl","fullWidth","InputLabel","htmlFor","Select","native","defaultValue","FormLabel","RadioGroup","Radio","cat","TextField","inputRef","FilledInput","id","startAdornment","InputAdornment","placeholder","multiline","Board","totalAmount","style","marginRight","reduce","a","b","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a380eb0b.chunk.js","sourcesContent":["const Footer = () => {\n  return (\n    <footer className=\"main-footer\">\n      <div className=\"container text-center\">\n        Created by <a href=\"https://github.com/hidaytrahman\">Hidayt Rahman</a>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { FormControlLabel, FormGroup, Switch } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\n\nconst Header = () => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const currentTheme = localStorage.getItem(\"theme\");\n\n    if (currentTheme === \"dark\") {\n      document.body.classList.add(\"dark-theme\");\n      setDarkMode(true);\n    } else {\n      setDarkMode(false);\n      document.body.classList.remove(\"dark-theme\");\n    }\n  }, [darkMode]);\n\n  const toggleChecked = () => {\n    setDarkMode(!darkMode);\n    document.body.classList.toggle(\"dark-theme\");\n    const theme = document.body.classList.contains(\"dark-theme\")\n      ? \"dark\"\n      : \"light\";\n    localStorage.setItem(\"theme\", theme);\n  };\n\n  return (\n    <header className=\"main-header\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-9\">\n            <h1>💰 Expense Spy 🕵️</h1>\n          </div>\n          <div className=\"col-sm-3 d-flex align-items-end justify-content-end \">\n            <p>\n              <span>Also Try</span>{\" \"}\n              <a href=\"https://hidaytrahman.github.io/penless-todo/\">\n                Penless todo\n              </a>\n              !\n            </p>\n            <FormGroup className=\"d-flex  align-items-end d-none\">\n              <FormControlLabel\n                control={<Switch checked={darkMode} onChange={toggleChecked} />}\n                label=\"Dark Mode\"\n              />\n            </FormGroup>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { useEffect, useState } from \"react\";\n\nconst useProgress = (completed, target) => {\n    const [progress, setProgress] = useState(0);\n\n    useEffect(() => {\n        const c = Math.ceil(completed / target * 100);\n        setProgress(c)\n        //console.log(progress);\n    }, [completed, target]);\n\n    return progress;\n}\n\nexport default useProgress;","import { makeAutoObservable } from \"mobx\";\n\nclass expenseStore {\n    // get data from browser if already exists and set to initial state\n    expenses = localStorage.getItem(\"expenseTracker\") ? JSON.parse(localStorage.getItem(\"expenseTracker\")) : [];\n\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n\n        makeAutoObservable(this)\n    }\n\n    // CREATE //\n    addExpense(trackerData) {\n        const dataset = {\n            type: trackerData.trackerType, //\"expense\",\n            date: {\n                month: trackerData.trackerMonth,\n                day: new Date().getUTCDate(),\n                year: new Date().getFullYear()\n            },\n            title: trackerData.trackerTitle,\n            amount: trackerData.trackerAmount,\n            info: trackerData.trackerNotes,\n            categories: trackerData.trackerCategory,\n            created: new Date()\n        }\n\n        this.expenses.push(dataset);\n\n        localStorage.setItem(\"expenseTracker\", JSON.stringify(this.expenses))\n    }\n\n\n    // UPDATE //\n    updateExpense(index, newData) {\n\n        const dataset = {\n            type: newData.trackerType, //\"expense\",\n            date: {\n                month: newData.trackerMonth,\n                day: new Date().getUTCDate(),\n                year: new Date().getFullYear()\n            },\n            title: newData.trackerTitle,\n            amount: newData.trackerAmount,\n            info: newData.trackerNotes,\n            categories: newData.trackerCategory,\n            created: this.expenses[index].created,\n            updated: new Date()\n        }\n\n        this.expenses.splice(index, 1, dataset);\n\n        localStorage.setItem(\"expenseTracker\", JSON.stringify(this.expenses))\n    }\n\n\n    // DELETE //\n    deleteExpense(index) {\n        this.expenses.splice(index, 1);\n\n        localStorage.setItem(\"expenseTracker\", JSON.stringify(this.expenses))\n    }\n\n\n    // GETTER Utils //\n    getIncomeList(){\n        return  this.expenses.filter((item) => item.type === 'income');\n    }\n\n    getExpenseList(){\n        return  this.expenses.filter((item) => item.type === 'expense');\n    }\n\n}\n\nexport default expenseStore;","import { createContext, useContext } from \"react\";\nimport expenseStore from \"./expenseStore\";\n\nclass RootStore {\n    constructor() {\n        this.expenseStore = new expenseStore(this);\n    }\n}\n\nconst StoresContext = createContext(new RootStore());\n\nexport const useStores = () => useContext(StoresContext);","import { Box , CircularProgress, Typography} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nexport function LinearProgressWithLabel(props) {\n    return (\n        <Box display=\"flex\" alignItems=\"center\">\n            <Box width=\"100%\" mr={1}>\n                <LinearProgress variant=\"determinate\" {...props} />\n            </Box>\n        </Box>\n    );\n}\n\n\nexport function CircularProgressWithLabel(props) {\n    return (\n      <Box position=\"relative\" display=\"inline-flex\">\n        <CircularProgress variant=\"determinate\" {...props} />\n        <Box\n          top={0}\n          left={0}\n          bottom={0}\n          right={0}\n          position=\"absolute\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Typography\n            variant=\"caption\"\n            component=\"div\"\n            color=\"textSecondary\"\n          >{`${Math.round(props.value)}%`}</Typography>\n        </Box>\n      </Box>\n    );\n  }","import { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  Chip,\n  IconButton,\n  List,\n  Button,\n} from \"@material-ui/core\";\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\nimport { observer } from \"mobx-react-lite\";\nimport { useStores } from \"store\";\nimport AspectRatioIcon from \"@material-ui/icons/AspectRatio\";\nimport FullscreenExitIcon from \"@material-ui/icons/FullscreenExit\";\n\nconst TrackerList = ({ setExpandList, expandList }) => {\n  const { expenseStore } = useStores();\n\n  const [sortBy, setSortBy] = useState(\"\");\n\n  return (\n    <div className=\"list-main-wrapper mb-4\">\n      <div className=\"controls-container\">\n        <h2>\n          Expense List <small>({expenseStore.expenses.length})</small>\n        </h2>\n        <div className=\"controls\">\n          <div className=\"list-control\">\n            <Button\n              type=\"submit\"\n              className=\"m-2\"\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => {\n                setSortBy(\"\");\n              }}\n            >\n              All\n            </Button>\n\n            {expenseStore.getIncomeList().length > 0 && (\n              <Button\n                type=\"submit\"\n                className=\"m-2\"\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => {\n                  setSortBy(\"income\");\n                }}\n              >\n                Incomes\n              </Button>\n            )}\n\n            {expenseStore.getExpenseList().length > 0 && (\n              <Button\n                type=\"submit\"\n                className=\"m-2\"\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => {\n                  setSortBy(\"expense\");\n                }}\n              >\n                Expenses\n              </Button>\n            )}\n          </div>\n        </div>\n\n        <IconButton\n          className=\"d-none control-expend-btn d-lg-block\"\n          onClick={() => setExpandList(!expandList)}\n        >\n          {\" \"}\n          {expandList ? <FullscreenExitIcon /> : <AspectRatioIcon />}\n        </IconButton>\n      </div>\n\n      <List className=\"list-wrapper\">\n        {expenseStore.expenses &&\n          expenseStore.expenses\n            .filter((exp) => exp.type.includes(sortBy))\n            .map((expense, index) => {\n              return (\n                <Card\n                  key={index}\n                  className={\n                    expense.type === \"income\"\n                      ? \"income-list-item\"\n                      : \"expense-list-item\"\n                  }\n                >\n                  <CardContent>\n                    <div className=\"list-header row\">\n                      <div className=\"col-sm-4 amount\">\n                        {`₹ ${expense.amount}`}\n                      </div>\n\n                      <div className=\"col-sm-8\">\n                        <div className=\"amount-title d-flex align-items-center justify-content-end\">\n                          <span className=\"m-2\">{expense.title}</span>\n\n                          <Chip\n                            color=\"secondary\"\n                            label={expense.categories}\n                            size=\"small\"\n                          />\n\n                          {/* <IconButton>\n                          <RemoveRedEyeRounded />\n                        </IconButton> */}\n                          <IconButton\n                            onClick={() => expenseStore.deleteExpense(index)}\n                          >\n                            <DeleteSharpIcon />\n                          </IconButton>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"more-info-wrapper\">\n                      <h6>{expense.info}</h6>\n                      <p className=\"capitalize\">\n                        <small>\n                          {expense.date.day} | {expense.date.month} |{\" \"}\n                          {expense.date.year}\n                        </small>\n                      </p>\n                    </div>\n                  </CardContent>\n                </Card>\n              );\n            })}\n      </List>\n    </div>\n  );\n};\n\nexport default observer(TrackerList);\n","// get income amount list\nexport const getIncomeAmountList = (trackerList) => {\n  const incomeAmountList = trackerList\n    .filter((item) => item.type === \"income\")\n    .map((item) => parseInt(item.amount));\n\n  return incomeAmountList;\n};\n\n\n\n// get expense amount list\nexport const getExpenseAmountList = (trackerList) => {\n  const expenseAmountList = trackerList\n    .filter((item) => item.type === \"expense\")\n    .map((item) => parseInt(item.amount));\n\n  return expenseAmountList;\n};\n\n\n\n// get total amount of income and expense\nexport const getTotalAmount = (trackerList) => {\n  return {\n    income: getIncomeAmountList(trackerList).reduce((a, b) => a + b, 0),\n    expense: getExpenseAmountList(trackerList).reduce((a, b) => a + b, 0),\n  };\n};\n\n\n\n// all income and expense amount list and total\nexport const getTrackerData = (trackerList) => {\n  const _incomeList = getIncomeAmountList(trackerList);\n  const _expenseList = getExpenseAmountList(trackerList);\n  return {\n    income: {\n      list: _incomeList,\n      total: _incomeList.reduce((a, b) => a + b, 0),\n    },\n\n    expense: {\n      list: _expenseList,\n      total: _expenseList.reduce((a, b) => a + b, 0),\n    },\n  };\n};\n","export const monthList = [\n    \"january\",\n    \"february\",\n    \"march\",\n    \"april\",\n    \"may\",\n    \"june\",\n    \"july\",\n    \"august\",\n    \"september\",\n    \"october\",\n    \"november\",\n    \"december\"\n];\n\n\n// Date utils\nconst date = new Date();\n// get date as a string\nexport const currentMonth = monthList[date.getMonth()];\n\n// get date as a string by calling a method\nexport const getCurrentMonthName = () => monthList[date.getMonth()];","export const trackerCategoryList = {\n  income: [\"salary\", \"freelance\", \"gift\", \"cashback\", \"other\"],\n  expense: [\n    \"personal\",\n    \"entertainment\",\n    \"bills\",\n    \"utilities\",\n    \"EMI\",\n    \"savings\",\n    \"cash\",\n    \"other\",\n  ],\n};\n","import {\n  Button,\n  FilledInput,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  InputAdornment,\n  InputLabel,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\n\nimport CancelIcon from \"@material-ui/icons/Cancel\";\n\nimport { useRef, useState } from \"react\";\nimport { monthList, currentMonth } from \"../../../core/date\";\nimport { trackerCategoryList } from \"core/constant\";\nimport { useStores } from \"store\";\nimport { observer } from \"mobx-react-lite\";\n\nconst AddItem = ({ showList, setShowList }) => {\n  const { expenseStore } = useStores();\n  const refTodo = useRef(null);\n\n  const [trackerMonth, setTrackerMonth] = useState(currentMonth);\n  const [trackerType, setTrackerType] = useState(\"income\");\n  const [trackerCategory, setTrackerCategory] = useState(\n    trackerCategoryList[trackerType][0]\n  );\n  const [trackerTitle, setTrackerTitle] = useState(\"\");\n  const [trackerAmount, setTrackerAmount] = useState(null);\n  const [trackerNotes, setTrackerNotes] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (trackerAmount && trackerTitle) {\n      const trackerData = {\n        trackerType,\n        trackerMonth,\n        trackerTitle,\n        trackerAmount,\n        trackerCategory,\n        trackerNotes,\n      };\n\n      console.log(\" trackerData \", trackerData);\n\n      expenseStore.addExpense(trackerData);\n\n      setTrackerTitle(\"\");\n      refTodo.current.value = \"\";\n      refTodo.current.focus();\n\n      setMessage(\"\");\n    } else {\n      setMessage(\"Title and Amount are required!\");\n    }\n  };\n\n  return (\n    <section\n      className={`add-item-wrapper ${showList ? \"\" : \"displaying\"}`}\n      data-testid=\"trackerAddItem\"\n    >\n      <form onSubmit={onSubmit}>\n        <div className=\"row form-container\">\n          <div className=\"custom-panel col-sm-6 mb-2\">\n            <div\n              className=\"btn btn-close-popup\"\n              onClick={() => setShowList(true)}\n            >\n              <CancelIcon />\n            </div>\n            <div className=\"emoji-expresion\">\n              {trackerType === \"income\" ? <span>🤑</span> : <span>😑</span>}\n            </div>\n            <FormControl className=\"mb-2\" fullWidth>\n              <InputLabel htmlFor=\"age-native-simple\">Month</InputLabel>\n              <Select\n                native\n                defaultValue={trackerMonth}\n                onChange={(e) => setTrackerMonth(e.target.value)}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                {monthList.map((month, index) => {\n                  return (\n                    <option value={month} key={index}>\n                      {month}\n                    </option>\n                  );\n                })}\n              </Select>\n            </FormControl>\n\n            <FormControl component=\"fieldset\" className=\"mb-2\">\n              <FormLabel component=\"legend\">Type</FormLabel>\n              <RadioGroup\n                aria-label=\"type\"\n                defaultValue={trackerType}\n                onChange={(e) => {\n                  setTrackerType(e.target.value);\n                }}\n              >\n                <FormControlLabel\n                  value=\"income\"\n                  control={<Radio />}\n                  label=\"Income\"\n                />\n                <FormControlLabel\n                  value=\"expense\"\n                  control={<Radio />}\n                  label=\"Expense\"\n                />\n              </RadioGroup>\n            </FormControl>\n\n            <FormControl className=\"mb-2\" fullWidth>\n              <InputLabel htmlFor=\"age-native-simple\">\n                Select Category\n              </InputLabel>\n              <Select\n                native\n                defaultValue={trackerCategory}\n                onChange={(e) => setTrackerCategory(e.target.value)}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                {trackerCategoryList[trackerType].map((cat, index) => {\n                  return (\n                    <option value={cat} key={index}>\n                      {cat}\n                    </option>\n                  );\n                })}\n              </Select>\n            </FormControl>\n\n            <TextField\n              className=\"mb-2\"\n              label={`Enter ${trackerType} title ?`}\n              variant=\"filled\"\n              fullWidth\n              inputRef={refTodo}\n              defaultValue={trackerTitle}\n              onChange={(e) => setTrackerTitle(e.target.value)}\n            />\n\n            <FormControl fullWidth className=\"mb-2\" variant=\"filled\">\n              <InputLabel htmlFor=\"filled-adornment-amount\">Amount</InputLabel>\n              <FilledInput\n                type=\"number\"\n                id=\"filled-adornment-amount\"\n                defaultValue={trackerAmount}\n                onChange={(e) => setTrackerAmount(e.target.value)}\n                startAdornment={\n                  <InputAdornment position=\"start\">$</InputAdornment>\n                }\n              />\n            </FormControl>\n\n            <TextField\n              id=\"filled-textarea\"\n              label=\"Notes\"\n              placeholder=\"Placeholder\"\n              multiline\n              defaultValue={trackerNotes}\n              onChange={(e) => setTrackerNotes(e.target.value)}\n              fullWidth\n              className=\"mb-2\"\n              variant=\"filled\"\n            />\n\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n              Add {trackerType}\n            </Button>\n\n            {message && (\n              <div className=\"alert alert-danger mt-2\">{message}</div>\n            )}\n          </div>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default observer(AddItem);\n","import { useStores } from \"store\";\nimport { CircularProgressWithLabel } from \"core/materialUtils\";\n\nconst Board = ({progress, totalAmount}) => {\n    const { expenseStore } = useStores();\n    return (\n        <div className=\"mb-2\">\n            {expenseStore.expenses && expenseStore.expenses.length > 0 && (\n                <div className=\"col-lg-12\">\n                    <section className=\"board\">\n                        <h3 className=\"d-flex\">\n                            {\" \"}\n                            <div style={{ marginRight: \"5px\" }}>Tracker Board</div>{\" \"}\n                            <CircularProgressWithLabel\n                                color=\"secondary\"\n                                value={progress}\n                            />\n                        </h3>\n\n                        <div className=\"row\">\n                            <div className=\"col-lg-6\">\n                                <div className=\"income-expense-area income\">\n                                    <strong className=\"label\">Income</strong>\n                                    <span className=\"total-income-amount\">\n                                    ₹ {totalAmount && totalAmount.income}{\" \"}\n                                    </span>\n                                </div>\n                            </div>\n\n                            <div className=\"col-lg-6\">\n                                <div className=\"income-expense-area\">\n                                    <strong className=\"label\">Expense</strong>\n                                    <span className=\"total-income-amount\">\n                                    ₹  {totalAmount && totalAmount.expense}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* <div className=\"app-meta-info\">\n                            <p>NO REGISTRATION REQUIRED</p>\n                            <p>We don't store data on server. 🙂</p>\n                        </div> */}\n                    </section>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Board;","import { observer } from \"mobx-react-lite\";\nimport useProgress from \"hooks/useProgress\";\nimport { useState } from \"react\";\nimport { useStores } from \"store\";\nimport { Button } from \"@material-ui/core\";\nimport { LinearProgressWithLabel } from \"core/materialUtils\";\n\nimport TrackerList from \"./list/TrackerList\";\nimport { getTotalAmount } from \"core/utils\";\nimport AddItem from \"./add/AddItem\";\nimport Board from \"./board/Board\";\nimport \"./Tracker.scss\";\n\nconst Tracker = () => {\n  const { expenseStore } = useStores();\n\n  const [showList, setShowList] = useState(true);\n  const [expandList, setExpandList] = useState(false);\n  const totalAmount = getTotalAmount(expenseStore.expenses);\n\n  const progress = useProgress(totalAmount.expense, totalAmount.income);\n\n  return (\n    <section className=\"tracker-wrapper\">\n      <div className=\"container\">\n        <div className=\"row d-flex justify-content-start mb-2\">\n          <div className=\"col-sm-12 d-flex justify-content-start\">\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                showList ? setShowList(false) : setShowList(true);\n              }}\n            >\n              {showList ? \"Add New\" : \"Show List\"}\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"custom-progressbar\">\n          <LinearProgressWithLabel value={progress} color=\"primary\" />\n        </div>\n\n        {\n          <AddItem\n            showList={showList}\n            setShowList={setShowList}\n            progress={progress}\n            totalAmount={totalAmount}\n          />\n        }\n\n        <div className=\"row tracker-add-and-list-wrapper\">\n          <div className={`col-lg-6`}>\n            <Board totalAmount={totalAmount} progress={progress} />\n          </div>\n\n          <div className={` mt-sm-2 ${expandList ? \"col-lg-12\" : \"col-lg-6\"}`}>\n            {expenseStore.expenses && expenseStore.expenses.length > 0 ? (\n              showList && (\n                <TrackerList\n                  expandList={expandList}\n                  setExpandList={setExpandList}\n                />\n              )\n            ) : (\n              <div className=\"alert alert-info\">\n                What are you thinking, Add your first expense? 😉\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default observer(Tracker);\n","import Footer from \"components/shared/footer/Footer\";\nimport Header from \"components/shared/header/Header\";\nimport Tracker from \"components/tracker/Tracker\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <section className=\"section-highlight-area\">\n        <div className=\"container\">\n          <h3>Track your expenses! 💸</h3>\n          <p>\n            Keeping track of your expenses is an important part of managing your\n            overall finances.\n          </p>\n        </div>\n      </section>\n      <Tracker />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
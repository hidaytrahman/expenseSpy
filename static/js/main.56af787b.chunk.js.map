{"version":3,"sources":["components/shared/Footer.js","components/shared/Header.js","core/date.js","core/constant.js","core/materialUtils.js","components/tracker/AddItem.js","components/tracker/TrackerList.js","hooks/useProgress.js","core/utils.js","components/tracker/Tracker.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","href","Header","useState","darkMode","setDarkMode","useEffect","localStorage","getItem","document","body","classList","add","remove","FormGroup","FormControlLabel","control","Switch","checked","onChange","toggle","theme","contains","setItem","label","monthList","date","Date","currentMonth","getMonth","trackerCategoryList","income","expense","LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","CircularProgressWithLabel","position","CircularProgress","top","left","bottom","right","justifyContent","Typography","component","color","Math","round","value","AddItem","trackerList","progress","totalAmount","refTodo","useRef","trackerMonth","setTrackerMonth","trackerType","setTrackerType","trackerCategory","setTrackerCategory","trackerTitle","setTrackerTitle","trackerAmount","setTrackerAmount","trackerNotes","setTrackerNotes","message","setMessage","onSubmit","e","preventDefault","trackerData","console","log","addItem","current","focus","length","FormControl","fullWidth","InputLabel","htmlFor","Select","native","defaultValue","target","map","month","index","FormLabel","RadioGroup","Radio","cat","TextField","inputRef","FilledInput","type","id","startAdornment","InputAdornment","placeholder","multiline","Button","style","marginRight","TrackerList","deleteItem","List","Card","CardContent","amount","title","Chip","categories","size","IconButton","onClick","info","day","year","useProgress","completed","setProgress","c","ceil","getIncomeAmountList","filter","item","parseInt","getExpenseAmountList","Tracker","trackerListOnStorage","JSON","parse","setTrackerList","setExpenseList","setIncomeList","showList","setShowList","reduce","a","b","getTotalAmount","todosCompleted","todo","_incomeList","_expenseList","stringify","dataset","getUTCDay","getFullYear","created","splice","editTrackerItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.56af787b.chunk.js","sourcesContent":["const Footer = () => {\r\n    return (\r\n        <footer className=\"main-footer\">\r\n            <div className=\"container text-center\">\r\n                Created by <a href=\"https://github.com/hidaytrahman\">Hidayt Rahman</a>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { FormControlLabel, FormGroup, Switch } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Header = () => {\r\n    const [darkMode, setDarkMode] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const currentTheme = localStorage.getItem(\"theme\");\r\n\r\n        if (currentTheme === \"dark\") {\r\n            document.body.classList.add(\"dark-theme\");\r\n            setDarkMode(true);\r\n        } else {\r\n            setDarkMode(false);\r\n            document.body.classList.remove(\"dark-theme\");\r\n        }\r\n    }, [darkMode]);\r\n\r\n\r\n\r\n    const toggleChecked = () => {\r\n        setDarkMode(!darkMode);\r\n        document.body.classList.toggle(\"dark-theme\");\r\n        const theme = document.body.classList.contains(\"dark-theme\")\r\n            ? \"dark\"\r\n            : \"light\";\r\n        localStorage.setItem(\"theme\", theme);\r\n    }\r\n\r\n\r\n    return (\r\n        <header className=\"main-header\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-9\">\r\n                        <h1>💰 Expense Spy 🕵️  </h1>\r\n                       \r\n                    </div>\r\n                    <div className=\"col-sm-3 d-flex align-items-end justify-content-end \">\r\n\r\n                        <p>Also Try <a href=\"https://hidaytrahman.github.io/penless-todo/\">Penless todo</a>!</p>\r\n                        <FormGroup className=\"d-flex  align-items-end d-none\">\r\n                            <FormControlLabel\r\n                                control={<Switch checked={darkMode}\r\n                                    onChange={toggleChecked}\r\n                                />}\r\n                                label=\"Dark Mode\"\r\n                            />\r\n                        </FormGroup>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","export const monthList = [\r\n    \"january\",\r\n    \"february\",\r\n    \"march\",\r\n    \"april\",\r\n    \"may\",\r\n    \"june\",\r\n    \"july\",\r\n    \"august\",\r\n    \"september\",\r\n    \"october\",\r\n    \"november\",\r\n    \"december\"\r\n];\r\n\r\n\r\n// Date utils\r\nconst date = new Date();\r\n// get date as a string\r\nexport const currentMonth = monthList[date.getMonth()];\r\n\r\n// get date as a string by calling a method\r\nexport const getCurrentMonthName = () => monthList[date.getMonth()];","export const trackerCategoryList = {\r\n  income: [\"salary\", \"freelance\", \"gift\", \"cashback\", \"other\"],\r\n  expense: [\r\n    \"personal\",\r\n    \"entertainment\",\r\n    \"bills\",\r\n    \"utilities\",\r\n    \"EMI\",\r\n    \"savings\",\r\n    \"cash\",\r\n    \"other\",\r\n  ],\r\n};\r\n","import { Box , CircularProgress, Typography} from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nexport function LinearProgressWithLabel(props) {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\n\r\nexport function CircularProgressWithLabel(props) {\r\n    return (\r\n      <Box position=\"relative\" display=\"inline-flex\">\r\n        <CircularProgress variant=\"determinate\" {...props} />\r\n        <Box\r\n          top={0}\r\n          left={0}\r\n          bottom={0}\r\n          right={0}\r\n          position=\"absolute\"\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Typography\r\n            variant=\"caption\"\r\n            component=\"div\"\r\n            color=\"textSecondary\"\r\n          >{`${Math.round(props.value)}%`}</Typography>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }","import {\r\n  Button,\r\n  FilledInput,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useRef, useState } from \"react\";\r\nimport { monthList, currentMonth } from \"../../core/date\";\r\nimport { trackerCategoryList } from \"core/constant\";\r\nimport { CircularProgressWithLabel } from \"core/materialUtils\";\r\n\r\nconst AddItem = (props) => {\r\n  const { trackerList, progress, totalAmount } = props;\r\n  const refTodo = useRef(null);\r\n\r\n  const [trackerMonth, setTrackerMonth] = useState(currentMonth);\r\n  const [trackerType, setTrackerType] = useState(\"income\");\r\n  const [trackerCategory, setTrackerCategory] = useState(\r\n    trackerCategoryList[trackerType][0]\r\n  );\r\n  const [trackerTitle, setTrackerTitle] = useState(\"\");\r\n  const [trackerAmount, setTrackerAmount] = useState(0);\r\n  const [trackerNotes, setTrackerNotes] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (trackerAmount && trackerTitle) {\r\n      const trackerData = {\r\n        trackerType,\r\n        trackerMonth,\r\n        trackerTitle,\r\n        trackerAmount,\r\n        trackerCategory,\r\n        trackerNotes,\r\n      };\r\n\r\n      console.log(\" trackerData \", trackerData);\r\n\r\n      props.addItem(trackerData);\r\n\r\n      setTrackerTitle(\"\");\r\n      refTodo.current.value = \"\";\r\n      refTodo.current.focus();\r\n\r\n      setMessage(\"\");\r\n    } else {\r\n      setMessage(\"Title and Amount are required!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div className=\"row\">\r\n        <div className={`custom-panel  mb-2 ${(trackerList && trackerList.length === 0) ? 'col-sm-12' : 'col-sm-6'}`}>\r\n          <div className=\"emoji-expresion\">\r\n            {trackerType === \"income\" ? <span>🤑</span> : <span>😑</span>}\r\n          </div>\r\n          <FormControl className=\"mb-2\" fullWidth>\r\n            <InputLabel htmlFor=\"age-native-simple\">Month</InputLabel>\r\n            <Select\r\n              native\r\n              defaultValue={trackerMonth}\r\n              onChange={(e) => setTrackerMonth(e.target.value)}\r\n            >\r\n              <option aria-label=\"None\" value=\"\" />\r\n              {monthList.map((month, index) => {\r\n                return (\r\n                  <option value={month} key={index}>\r\n                    {month}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl component=\"fieldset\" className=\"mb-2\">\r\n            <FormLabel component=\"legend\">Type</FormLabel>\r\n            <RadioGroup\r\n              aria-label=\"type\"\r\n              defaultValue={trackerType}\r\n              onChange={(e) => {\r\n                setTrackerType(e.target.value);\r\n              }}\r\n            >\r\n              <FormControlLabel\r\n                value=\"income\"\r\n                control={<Radio />}\r\n                label=\"Income\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"expense\"\r\n                control={<Radio />}\r\n                label=\"Expense\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n\r\n          <FormControl className=\"mb-2\" fullWidth>\r\n            <InputLabel htmlFor=\"age-native-simple\">Select Category</InputLabel>\r\n            <Select\r\n              native\r\n              defaultValue={trackerCategory}\r\n              onChange={(e) => setTrackerCategory(e.target.value)}\r\n            >\r\n              <option aria-label=\"None\" value=\"\" />\r\n              {trackerCategoryList[trackerType].map((cat, index) => {\r\n                return (\r\n                  <option value={cat} key={index}>\r\n                    {cat}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            className=\"mb-2\"\r\n            label={`Enter ${trackerType} title ?`}\r\n            variant=\"filled\"\r\n            fullWidth\r\n            inputRef={refTodo}\r\n            defaultValue={trackerTitle}\r\n            onChange={(e) => setTrackerTitle(e.target.value)}\r\n          />\r\n\r\n          <FormControl fullWidth className=\"mb-2\" variant=\"filled\">\r\n            <InputLabel htmlFor=\"filled-adornment-amount\">Amount</InputLabel>\r\n            <FilledInput\r\n              type=\"number\"\r\n              id=\"filled-adornment-amount\"\r\n              defaultValue={trackerAmount}\r\n              onChange={(e) => setTrackerAmount(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">$</InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n\r\n          <TextField\r\n            id=\"filled-textarea\"\r\n            label=\"Notes\"\r\n            placeholder=\"Placeholder\"\r\n            multiline\r\n            defaultValue={trackerNotes}\r\n            onChange={(e) => setTrackerNotes(e.target.value)}\r\n            fullWidth\r\n            className=\"mb-2\"\r\n            variant=\"filled\"\r\n          />\r\n\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n            Add {trackerType}\r\n          </Button>\r\n\r\n          {message && <div className=\"alert alert-danger mt-2\">{message}</div>}\r\n        </div>\r\n\r\n        <div className=\"col-sm-6 mb-2\">\r\n          {trackerList && trackerList.length > 0 && (\r\n            <div className=\"col-lg-12\">\r\n              <section className=\"todo-board\">\r\n                <h3 className=\"d-flex\">\r\n                  {\" \"}\r\n                  <div style={{ marginRight: \"5px\" }}>Tracker Board</div>{\" \"}\r\n                  <CircularProgressWithLabel\r\n                    color=\"secondary\"\r\n                    value={progress}\r\n                  />\r\n                </h3>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <div className=\"income-expense-area\">\r\n                      <strong className=\"label\">Income</strong>\r\n                      <span className=\"total-income-amount\">\r\n                        {totalAmount && totalAmount.income}{\" \"}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-6\">\r\n                    <div className=\"income-expense-area\">\r\n                      <strong className=\"label\">Expense</strong>\r\n                      <span className=\"total-income-amount\">\r\n                        {totalAmount && totalAmount.expense}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <div className=\"app-meta-info\">\r\n                  <p>NO REGISTRATION REQUIRED</p>\r\n                  <p>We don't store data on server. 🙂</p>\r\n                </div>\r\n              </section>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\n\r\nexport default AddItem;\r\n","import { Card, CardContent, Chip,  IconButton, List } from \"@material-ui/core\";\r\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\r\nconst TrackerList = (props) => {\r\n  const { trackerList, deleteItem } = props;\r\n\r\n  return (\r\n    <div className=\"list-main-wrapper mt-4 mb-4\">\r\n      <h2>Expense List</h2>\r\n      <List className=\"list-wrapper\">\r\n        {\r\n          trackerList &&\r\n          trackerList.map((expense, index) => {\r\n            return (\r\n              <Card key={index} className={(expense.type === 'income') ? \"income-list-item\": \"expense-list-item\"}>\r\n                <CardContent>\r\n                  <div className=\"list-header row\">\r\n                    <div className=\"col-sm-4 amount\">\r\n                      {`₹ ${expense.amount}`}\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-8\">\r\n                      <div className=\"amount-title d-flex align-items-center justify-content-end\">\r\n                        <span className=\"m-2\">{expense.title}</span>\r\n\r\n                        <Chip color=\"secondary\" label={expense.categories} size=\"small\" />\r\n\r\n                        {/* <IconButton>\r\n                          <RemoveRedEyeRounded />\r\n                        </IconButton> */}\r\n                        <IconButton\r\n                          onClick={() => deleteItem(index)}>\r\n                          <DeleteSharpIcon />\r\n                        </IconButton>\r\n                      </div>\r\n\r\n\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                  <div className=\"more-info-wrapper\">\r\n                    <h6>{expense.info}</h6>\r\n                    <p><small>{expense.date.day} | {expense.date.month} | {expense.date.year}</small></p>\r\n                  </div>\r\n\r\n                </CardContent>\r\n\r\n\r\n              </Card>\r\n\r\n            )\r\n          })\r\n        }\r\n      </List>\r\n    </div >\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default TrackerList;","import { useEffect, useState } from \"react\";\r\n\r\nconst useProgress = (completed, target) => {\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const c = Math.ceil(completed / target * 100);\r\n        setProgress(c)\r\n        //console.log(progress);\r\n    }, [completed, target]);\r\n\r\n    return progress;\r\n}\r\n\r\nexport default useProgress;","// get income amount list\r\nexport const getIncomeAmountList = (trackerList) => {\r\n  const incomeAmountList = trackerList\r\n    .filter((item) => item.type === \"income\")\r\n    .map((item) => parseInt(item.amount));\r\n\r\n  return incomeAmountList;\r\n};\r\n\r\n\r\n\r\n// get expense amount list\r\nexport const getExpenseAmountList = (trackerList) => {\r\n  const expenseAmountList = trackerList\r\n    .filter((item) => item.type === \"expense\")\r\n    .map((item) => parseInt(item.amount));\r\n\r\n  return expenseAmountList;\r\n};\r\n\r\n\r\n\r\n// get total amount of income and expense\r\nexport const getTotalAmount = (trackerList) => {\r\n  return {\r\n    income: getIncomeAmountList(trackerList).reduce((a, b) => a + b, 0),\r\n    expense: getExpenseAmountList(trackerList).reduce((a, b) => a + b, 0),\r\n  };\r\n};\r\n\r\n\r\n\r\n// all income and expense amount list and total\r\nexport const getTrackerData = (trackerList) => {\r\n  const _incomeList = getIncomeAmountList(trackerList);\r\n  const _expenseList = getExpenseAmountList(trackerList);\r\n  return {\r\n    income: {\r\n      list: _incomeList,\r\n      total: _incomeList.reduce((a, b) => a + b, 0),\r\n    },\r\n\r\n    expense: {\r\n      list: _expenseList,\r\n      total: _expenseList.reduce((a, b) => a + b, 0),\r\n    },\r\n  };\r\n};\r\n","\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport AddItem from './AddItem';\r\nimport TrackerList from './TrackerList';\r\nimport \"./Tracker.scss\";\r\nimport useProgress from 'hooks/useProgress';\r\nimport { getTotalAmount } from \"core/utils\";\r\nimport { LinearProgressWithLabel } from 'core/materialUtils';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst Tracker = () => {\r\n\r\n    // get data from browser if already exists and set to initial state\r\n    const trackerListOnStorage = localStorage.getItem(\"expenseTracker\") ? JSON.parse(localStorage.getItem(\"expenseTracker\")) : [];\r\n\r\n    const [trackerList, setTrackerList] = useState([...trackerListOnStorage]);\r\n    const [totalExpense, setTotalExpense] = useState(0);\r\n    const [expenseList, setExpenseList] = useState([]);\r\n    const [incomeList, setIncomeList] = useState([]);\r\n    const [showList, setShowList] = useState(false);\r\n    const totalAmount = getTotalAmount(trackerList);\r\n\r\n    // get completed todos\r\n    const todosCompleted = (trackerList && trackerList.length > 0) ? trackerList.filter((todo) => todo.completed === true) : []\r\n\r\n    const progress = useProgress(totalAmount.expense, totalAmount.income);\r\n\r\n    // edit item\r\n    const addItem = (trackerData) => {\r\n        console.log(' trackerData ', trackerData);\r\n\r\n        const dataset = {\r\n            type: trackerData.trackerType, //\"expense\",\r\n            date: {\r\n                month: trackerData.trackerMonth,\r\n                day: new Date().getUTCDay(),\r\n                year: new Date().getFullYear()\r\n            },\r\n            title: trackerData.trackerTitle,\r\n            amount: trackerData.trackerAmount,\r\n            info: trackerData.trackerNotes,\r\n            categories: trackerData.trackerCategory,\r\n            created: new Date()\r\n        }\r\n\r\n        console.log(' dataset ', dataset);\r\n        setTrackerList([...trackerList, dataset]);\r\n        localStorage.setItem(\"expenseTracker\", JSON.stringify(trackerList))\r\n    }\r\n\r\n    // delete item\r\n    const deleteItem = (index) => {\r\n        trackerList.splice(index, 1);\r\n        setTrackerList([...trackerList]);\r\n        localStorage.setItem(\"expenseTracker\", JSON.stringify(trackerList))\r\n    }\r\n\r\n    // todo edit item\r\n    const editTrackerItem = (index, title) => {\r\n        trackerList.splice(index, 1, { title: title, completed: false });\r\n        setTrackerList([...trackerList]);\r\n        localStorage.setItem(\"expenseTracker\", JSON.stringify(trackerList))\r\n    }\r\n\r\n    useEffect(() => {\r\n        // filter income and expense\r\n        const _incomeList = trackerList.filter((item) => item.type === 'income');\r\n        const _expenseList = trackerList.filter((item) => item.type === 'expense');\r\n\r\n        setIncomeList(_incomeList)\r\n        setExpenseList(_expenseList)\r\n\r\n        localStorage.setItem(\"expenseTracker\", JSON.stringify(trackerList))\r\n\r\n\r\n    }, [trackerList]);\r\n\r\n\r\n    return (\r\n        <section className=\"tracker-wrapper\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row d-flex justify-content-end mb-2\">\r\n\r\n                    <div className=\"col-sm-4 d-flex justify-content-end\">\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={() => {\r\n                            (showList) ? setShowList(false) : setShowList(true)\r\n\r\n                        }}>\r\n                            {(showList) ? 'Add New' : 'Show List'}\r\n                        </Button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"custom-progressbar\">\r\n                    <LinearProgressWithLabel value={progress} color=\"primary\" />\r\n                </div>\r\n\r\n                {\r\n                    !showList && <AddItem\r\n                        addItem={addItem}\r\n                        trackerList={trackerList}\r\n                        todosCompleted={todosCompleted}\r\n                        progress={progress}\r\n                        totalAmount={totalAmount}\r\n                    />\r\n                }\r\n\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-8\">\r\n\r\n                        {\r\n                            trackerList && trackerList.length > 0 ?\r\n                                showList &&\r\n                                <TrackerList\r\n                                    trackerList={trackerList}\r\n                                    deleteItem={deleteItem}\r\n                                    editTrackerItem={editTrackerItem}\r\n                                />\r\n\r\n                                : <div className=\"alert alert-info\">What are you thinking, Add your first expense? 😉</div>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Tracker;","import Footer from 'components/shared/Footer';\r\nimport Header from 'components/shared/Header';\r\nimport Tracker from 'components/tracker/Tracker';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header></Header>\r\n      <section className=\"section-highlight-area\">\r\n        <div className=\"container\">\r\n         <h3>Track your expenses! 💸</h3><p>Keeping track of your expenses is an important part of managing your overall finances.</p>\r\n        </div>\r\n      </section>\r\n      <Tracker></Tracker>\r\n\r\n      <Footer></Footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
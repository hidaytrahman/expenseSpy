{"version":3,"sources":["components/shared/Footer.js","components/shared/Header.js","core/materialUtils.js","core/date.js","core/constant.js","store/expenseStore.js","store/index.js","components/tracker/AddItem.js","components/tracker/TrackerList.js","hooks/useProgress.js","core/utils.js","components/tracker/Board.js","components/tracker/Tracker.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","href","Header","useState","darkMode","setDarkMode","useEffect","localStorage","getItem","document","body","classList","add","remove","FormGroup","FormControlLabel","control","Switch","checked","onChange","toggle","theme","contains","setItem","label","LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","CircularProgressWithLabel","position","CircularProgress","top","left","bottom","right","justifyContent","Typography","component","color","Math","round","value","monthList","date","Date","currentMonth","getMonth","trackerCategoryList","income","expense","expenseStore","rootStore","expenses","JSON","parse","this","makeAutoObservable","trackerData","dataset","type","trackerType","month","trackerMonth","day","getUTCDay","year","getFullYear","title","trackerTitle","amount","trackerAmount","info","trackerNotes","categories","trackerCategory","created","push","stringify","index","newData","updated","splice","filter","item","StoresContext","createContext","useStores","useContext","observer","showList","setShowList","refTodo","useRef","setTrackerMonth","setTrackerType","setTrackerCategory","setTrackerTitle","setTrackerAmount","setTrackerNotes","message","setMessage","onSubmit","e","preventDefault","console","log","addExpense","current","focus","onClick","FormControl","fullWidth","InputLabel","htmlFor","Select","native","defaultValue","target","map","FormLabel","RadioGroup","Radio","cat","TextField","inputRef","FilledInput","id","startAdornment","InputAdornment","placeholder","multiline","Button","setExpandList","expandList","expList","length","IconButton","List","Card","CardContent","Chip","size","deleteExpense","useProgress","completed","progress","setProgress","c","ceil","getIncomeAmountList","trackerList","parseInt","getExpenseAmountList","Board","totalAmount","style","marginRight","reduce","a","b","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d64babe6.chunk.js","sourcesContent":["const Footer = () => {\n    return (\n        <footer className=\"main-footer\">\n            <div className=\"container text-center\">\n                Created by <a href=\"https://github.com/hidaytrahman\">Hidayt Rahman</a>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","import { FormControlLabel, FormGroup, Switch } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\n\nconst Header = () => {\n    const [darkMode, setDarkMode] = useState(false);\n\n\n    useEffect(() => {\n        const currentTheme = localStorage.getItem(\"theme\");\n\n        if (currentTheme === \"dark\") {\n            document.body.classList.add(\"dark-theme\");\n            setDarkMode(true);\n        } else {\n            setDarkMode(false);\n            document.body.classList.remove(\"dark-theme\");\n        }\n    }, [darkMode]);\n\n\n\n    const toggleChecked = () => {\n        setDarkMode(!darkMode);\n        document.body.classList.toggle(\"dark-theme\");\n        const theme = document.body.classList.contains(\"dark-theme\")\n            ? \"dark\"\n            : \"light\";\n        localStorage.setItem(\"theme\", theme);\n    }\n\n\n    return (\n        <header className=\"main-header\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-9\">\n                        <h1>💰 Expense Spy 🕵️  </h1>\n                       \n                    </div>\n                    <div className=\"col-sm-3 d-flex align-items-end justify-content-end \">\n\n                        <p>Also Try <a href=\"https://hidaytrahman.github.io/penless-todo/\">Penless todo</a>!</p>\n                        <FormGroup className=\"d-flex  align-items-end d-none\">\n                            <FormControlLabel\n                                control={<Switch checked={darkMode}\n                                    onChange={toggleChecked}\n                                />}\n                                label=\"Dark Mode\"\n                            />\n                        </FormGroup>\n                    </div>\n                </div>\n\n\n\n            </div>\n\n        </header>\n    )\n}\n\nexport default Header;","import { Box , CircularProgress, Typography} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nexport function LinearProgressWithLabel(props) {\n    return (\n        <Box display=\"flex\" alignItems=\"center\">\n            <Box width=\"100%\" mr={1}>\n                <LinearProgress variant=\"determinate\" {...props} />\n            </Box>\n        </Box>\n    );\n}\n\n\nexport function CircularProgressWithLabel(props) {\n    return (\n      <Box position=\"relative\" display=\"inline-flex\">\n        <CircularProgress variant=\"determinate\" {...props} />\n        <Box\n          top={0}\n          left={0}\n          bottom={0}\n          right={0}\n          position=\"absolute\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Typography\n            variant=\"caption\"\n            component=\"div\"\n            color=\"textSecondary\"\n          >{`${Math.round(props.value)}%`}</Typography>\n        </Box>\n      </Box>\n    );\n  }","export const monthList = [\n    \"january\",\n    \"february\",\n    \"march\",\n    \"april\",\n    \"may\",\n    \"june\",\n    \"july\",\n    \"august\",\n    \"september\",\n    \"october\",\n    \"november\",\n    \"december\"\n];\n\n\n// Date utils\nconst date = new Date();\n// get date as a string\nexport const currentMonth = monthList[date.getMonth()];\n\n// get date as a string by calling a method\nexport const getCurrentMonthName = () => monthList[date.getMonth()];","export const trackerCategoryList = {\n  income: [\"salary\", \"freelance\", \"gift\", \"cashback\", \"other\"],\n  expense: [\n    \"personal\",\n    \"entertainment\",\n    \"bills\",\n    \"utilities\",\n    \"EMI\",\n    \"savings\",\n    \"cash\",\n    \"other\",\n  ],\n};\n","import { makeAutoObservable } from \"mobx\";\n\nclass expenseStore {\n    // get data from browser if already exists and set to initial state\n    expenses = localStorage.getItem(\"expenseTracker\") ? JSON.parse(localStorage.getItem(\"expenseTracker\")) : [];\n\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n\n        makeAutoObservable(this)\n    }\n\n    // CREATE //\n    addExpense(trackerData) {\n        const dataset = {\n            type: trackerData.trackerType, //\"expense\",\n            date: {\n                month: trackerData.trackerMonth,\n                day: new Date().getUTCDay(),\n                year: new Date().getFullYear()\n            },\n            title: trackerData.trackerTitle,\n            amount: trackerData.trackerAmount,\n            info: trackerData.trackerNotes,\n            categories: trackerData.trackerCategory,\n            created: new Date()\n        }\n\n        this.expenses.push(dataset);\n\n        localStorage.setItem(\"expenseTracker\", JSON.stringify(this.expenses))\n    }\n\n\n    // UPDATE //\n    // Todo\n    updateExpense(index, newData) {\n\n        const dataset = {\n            type: newData.trackerType, //\"expense\",\n            date: {\n                month: newData.trackerMonth,\n                day: new Date().getUTCDay(),\n                year: new Date().getFullYear()\n            },\n            title: newData.trackerTitle,\n            amount: newData.trackerAmount,\n            info: newData.trackerNotes,\n            categories: newData.trackerCategory,\n            created: this.expenses[index].created,\n            updated: new Date()\n        }\n\n        this.expenses.splice(index, 1, dataset);\n\n        localStorage.setItem(\"expenseTracker\", JSON.stringify(this.expenses))\n    }\n\n\n    // DELETE //\n    deleteExpense(index) {\n        this.expenses.splice(index, 1);\n\n        localStorage.setItem(\"expenseTracker\", JSON.stringify(this.expenses))\n    }\n\n\n    // GET Utils //\n    getIncomeList(){\n        return  this.expenses.filter((item) => item.type === 'income');\n    }\n\n    getExpenseList(){\n        return  this.expenses.filter((item) => item.type === 'expense');\n    }\n\n}\n\nexport default expenseStore;","import { createContext, useContext } from \"react\";\nimport expenseStore from \"./expenseStore\";\n\n\nclass RootStore {\n\n    constructor() {\n        this.expenseStore = new expenseStore(this);\n    }\n}\n\nconst StoresContext = createContext(new RootStore());\n\nexport const useStores = () => useContext(StoresContext);","import {\n  Button,\n  FilledInput,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  InputAdornment,\n  InputLabel,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\n\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nimport { useRef, useState } from \"react\";\nimport { monthList, currentMonth } from \"../../core/date\";\nimport { trackerCategoryList } from \"core/constant\";\nimport { CircularProgressWithLabel } from \"core/materialUtils\";\nimport { useStores } from \"store\";\nimport { observer } from \"mobx-react-lite\";\n\n\nconst AddItem = ({showList, setShowList}) => {\n  const { expenseStore } = useStores();\n  const refTodo = useRef(null);\n\n  const [trackerMonth, setTrackerMonth] = useState(currentMonth);\n  const [trackerType, setTrackerType] = useState(\"income\");\n  const [trackerCategory, setTrackerCategory] = useState(\n    trackerCategoryList[trackerType][0]\n  );\n  const [trackerTitle, setTrackerTitle] = useState(\"\");\n  const [trackerAmount, setTrackerAmount] = useState(null);\n  const [trackerNotes, setTrackerNotes] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (trackerAmount && trackerTitle) {\n      const trackerData = {\n        trackerType,\n        trackerMonth,\n        trackerTitle,\n        trackerAmount,\n        trackerCategory,\n        trackerNotes,\n      };\n\n      console.log(\" trackerData \", trackerData);\n\n      expenseStore.addExpense(trackerData);\n\n      setTrackerTitle(\"\");\n      refTodo.current.value = \"\";\n      refTodo.current.focus();\n\n      setMessage(\"\");\n    } else {\n      setMessage(\"Title and Amount are required!\");\n    }\n  };\n\n  return (\n    <section className={`add-item-wrapper ${showList ? \"\" : \"displaying\"}`}>\n      <form onSubmit={onSubmit}>\n        <div className=\"row form-container\">\n          \n          <div className=\"custom-panel col-sm-6 mb-2\">\n          <div className=\"btn btn-close-popup\" onClick={() => setShowList(true)}><CancelIcon /></div>\n            <div className=\"emoji-expresion\">\n              {trackerType === \"income\" ? <span>🤑</span> : <span>😑</span>}\n            </div>\n            <FormControl className=\"mb-2\" fullWidth>\n              <InputLabel htmlFor=\"age-native-simple\">Month</InputLabel>\n              <Select\n                native\n                defaultValue={trackerMonth}\n                onChange={(e) => setTrackerMonth(e.target.value)}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                {monthList.map((month, index) => {\n                  return (\n                    <option value={month} key={index}>\n                      {month}\n                    </option>\n                  );\n                })}\n              </Select>\n            </FormControl>\n\n            <FormControl component=\"fieldset\" className=\"mb-2\">\n              <FormLabel component=\"legend\">Type</FormLabel>\n              <RadioGroup\n                aria-label=\"type\"\n                defaultValue={trackerType}\n                onChange={(e) => {\n                  setTrackerType(e.target.value);\n                }}\n              >\n                <FormControlLabel\n                  value=\"income\"\n                  control={<Radio />}\n                  label=\"Income\"\n                />\n                <FormControlLabel\n                  value=\"expense\"\n                  control={<Radio />}\n                  label=\"Expense\"\n                />\n              </RadioGroup>\n            </FormControl>\n\n            <FormControl className=\"mb-2\" fullWidth>\n              <InputLabel htmlFor=\"age-native-simple\">Select Category</InputLabel>\n              <Select\n                native\n                defaultValue={trackerCategory}\n                onChange={(e) => setTrackerCategory(e.target.value)}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                {trackerCategoryList[trackerType].map((cat, index) => {\n                  return (\n                    <option value={cat} key={index}>\n                      {cat}\n                    </option>\n                  );\n                })}\n              </Select>\n            </FormControl>\n\n            <TextField\n              className=\"mb-2\"\n              label={`Enter ${trackerType} title ?`}\n              variant=\"filled\"\n              fullWidth\n              inputRef={refTodo}\n              defaultValue={trackerTitle}\n              onChange={(e) => setTrackerTitle(e.target.value)}\n            />\n\n            <FormControl fullWidth className=\"mb-2\" variant=\"filled\">\n              <InputLabel htmlFor=\"filled-adornment-amount\">Amount</InputLabel>\n              <FilledInput\n                type=\"number\"\n                id=\"filled-adornment-amount\"\n                defaultValue={trackerAmount}\n                onChange={(e) => setTrackerAmount(e.target.value)}\n                startAdornment={\n                  <InputAdornment position=\"start\">$</InputAdornment>\n                }\n              />\n            </FormControl>\n\n            <TextField\n              id=\"filled-textarea\"\n              label=\"Notes\"\n              placeholder=\"Placeholder\"\n              multiline\n              defaultValue={trackerNotes}\n              onChange={(e) => setTrackerNotes(e.target.value)}\n              fullWidth\n              className=\"mb-2\"\n              variant=\"filled\"\n            />\n\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n              Add {trackerType}\n            </Button>\n\n            {message && <div className=\"alert alert-danger mt-2\">{message}</div>}\n          </div>\n\n        </div>\n      </form>\n    </section>\n\n  );\n};\n\n\nexport default observer(AddItem);\n","import { Card, CardContent, Chip, IconButton, List } from \"@material-ui/core\";\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\nimport { observer } from \"mobx-react-lite\";\nimport { useStores } from \"store\";\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\nimport { Button } from '@material-ui/core';\nimport { useEffect, useState } from \"react\";\n\nconst TrackerList = ({ setExpandList, expandList }) => {\n  const { expenseStore } = useStores();\n\n  const [expList, setExpList] = useState(expenseStore.expenses);\n\n  const [sortBy, setSortBy] = useState('all');\n\n  // useEffect(() => {\n  //   if (sortBy === 'income') {\n  //     setExpList(expenseStore.getIncomeList());\n  //   } else if (sortBy === 'expense') {\n  //     setExpList(expenseStore.getExpenseList());\n  //   } else {\n  //     setExpList(expenseStore.expenses);\n  //   }\n  // }, [sortBy, expenseStore])\n\n  return (\n    <div className=\"list-main-wrapper mb-4\">\n      <div className=\"controls-container\">\n        <h2>Expense List <small>({expenseStore.expenses.length})</small></h2>\n        <div className=\"contols\">\n          {/* <Button type=\"submit\" className=\"m-2\" variant=\"contained\" color=\"secondary\"\n            onClick={() => {\n              setSortBy('all')\n            }}>\n            All\n          </Button>\n\n          <Button type=\"submit\" className=\"m-2\" variant=\"contained\" color=\"secondary\"\n            onClick={() => {\n              setSortBy('income')\n            }}>\n            Incomes\n          </Button>\n\n          <Button type=\"submit\" className=\"m-2\" variant=\"contained\" color=\"secondary\"\n            onClick={() => {\n              setSortBy('expense')\n            }}>\n            Expenses\n          </Button> */}\n          <IconButton className=\"d-none d-lg-block\" onClick={() => setExpandList(!expandList)}> {(expandList) ? <FullscreenExitIcon /> : <AspectRatioIcon />}</IconButton>\n        </div>\n\n      </div>\n\n      <List className=\"list-wrapper\">\n        {\n          expList &&\n          expList.map((expense, index) => {\n            return (\n              <Card key={index} className={(expense.type === 'income') ? \"income-list-item\" : \"expense-list-item\"}>\n                <CardContent>\n                  <div className=\"list-header row\">\n                    <div className=\"col-sm-4 amount\">\n                      {`₹ ${expense.amount}`}\n                    </div>\n\n                    <div className=\"col-sm-8\">\n                      <div className=\"amount-title d-flex align-items-center justify-content-end\">\n                        <span className=\"m-2\">{expense.title}</span>\n\n                        <Chip color=\"secondary\" label={expense.categories} size=\"small\" />\n\n                        {/* <IconButton>\n                          <RemoveRedEyeRounded />\n                        </IconButton> */}\n                        <IconButton\n                          onClick={() => expenseStore.deleteExpense(index)}>\n                          <DeleteSharpIcon />\n                        </IconButton>\n                      </div>\n\n\n                    </div>\n\n                  </div>\n\n                  <div className=\"more-info-wrapper\">\n                    <h6>{expense.info}</h6>\n                    <p><small>{expense.date.day} | {expense.date.month} | {expense.date.year}</small></p>\n                  </div>\n\n                </CardContent>\n\n\n              </Card>\n            )\n          })\n        }\n      </List>\n    </div >\n\n\n  )\n}\n\nexport default observer(TrackerList);","import { useEffect, useState } from \"react\";\n\nconst useProgress = (completed, target) => {\n    const [progress, setProgress] = useState(0);\n\n    useEffect(() => {\n        const c = Math.ceil(completed / target * 100);\n        setProgress(c)\n        //console.log(progress);\n    }, [completed, target]);\n\n    return progress;\n}\n\nexport default useProgress;","// get income amount list\nexport const getIncomeAmountList = (trackerList) => {\n  const incomeAmountList = trackerList\n    .filter((item) => item.type === \"income\")\n    .map((item) => parseInt(item.amount));\n\n  return incomeAmountList;\n};\n\n\n\n// get expense amount list\nexport const getExpenseAmountList = (trackerList) => {\n  const expenseAmountList = trackerList\n    .filter((item) => item.type === \"expense\")\n    .map((item) => parseInt(item.amount));\n\n  return expenseAmountList;\n};\n\n\n\n// get total amount of income and expense\nexport const getTotalAmount = (trackerList) => {\n  return {\n    income: getIncomeAmountList(trackerList).reduce((a, b) => a + b, 0),\n    expense: getExpenseAmountList(trackerList).reduce((a, b) => a + b, 0),\n  };\n};\n\n\n\n// all income and expense amount list and total\nexport const getTrackerData = (trackerList) => {\n  const _incomeList = getIncomeAmountList(trackerList);\n  const _expenseList = getExpenseAmountList(trackerList);\n  return {\n    income: {\n      list: _incomeList,\n      total: _incomeList.reduce((a, b) => a + b, 0),\n    },\n\n    expense: {\n      list: _expenseList,\n      total: _expenseList.reduce((a, b) => a + b, 0),\n    },\n  };\n};\n","import { useStores } from \"store\";\nimport { CircularProgressWithLabel } from \"core/materialUtils\";\n\nconst Board = ({progress, totalAmount}) => {\n    const { expenseStore } = useStores();\n    return (\n        <div className=\"mb-2\">\n            {expenseStore.expenses && expenseStore.expenses.length > 0 && (\n                <div className=\"col-lg-12\">\n                    <section className=\"board\">\n                        <h3 className=\"d-flex\">\n                            {\" \"}\n                            <div style={{ marginRight: \"5px\" }}>Tracker Board</div>{\" \"}\n                            <CircularProgressWithLabel\n                                color=\"secondary\"\n                                value={progress}\n                            />\n                        </h3>\n\n                        <div className=\"row\">\n                            <div className=\"col-lg-6\">\n                                <div className=\"income-expense-area income\">\n                                    <strong className=\"label\">Income</strong>\n                                    <span className=\"total-income-amount\">\n                                        {totalAmount && totalAmount.income}{\" \"}\n                                    </span>\n                                </div>\n                            </div>\n\n                            <div className=\"col-lg-6\">\n                                <div className=\"income-expense-area\">\n                                    <strong className=\"label\">Expense</strong>\n                                    <span className=\"total-income-amount\">\n                                        {totalAmount && totalAmount.expense}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* <div className=\"app-meta-info\">\n                            <p>NO REGISTRATION REQUIRED</p>\n                            <p>We don't store data on server. 🙂</p>\n                        </div> */}\n                    </section>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Board;","import { useState } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { LinearProgressWithLabel } from 'core/materialUtils';\nimport { Button } from '@material-ui/core';\n\nimport AddItem from './AddItem';\nimport TrackerList from './TrackerList';\nimport \"./Tracker.scss\";\nimport useProgress from 'hooks/useProgress';\nimport { getTotalAmount } from \"core/utils\";\nimport { useStores } from 'store';\nimport Board from './Board';\n\n\nconst Tracker = () => {\n    const { expenseStore } = useStores();\n\n    const [showList, setShowList] = useState(true);\n    const [expandList, setExpandList] = useState(false);\n    const totalAmount = getTotalAmount(expenseStore.expenses);\n\n    const progress = useProgress(totalAmount.expense, totalAmount.income);\n\n    return (\n        <section className=\"tracker-wrapper\">\n            <div className=\"container\">\n                <div className=\"row d-flex justify-content-end mb-2\">\n\n                    <div className=\"col-sm-4 d-flex justify-content-end\">\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={() => {\n                            (showList) ? setShowList(false) : setShowList(true)\n\n                        }}>\n                            {(showList) ? 'Add New' : 'Show List'}\n                        </Button>\n                    </div>\n\n                </div>\n\n            </div>\n\n            <div className=\"container\">\n                <div className=\"custom-progressbar\">\n                    <LinearProgressWithLabel value={progress} color=\"primary\" />\n                </div>\n\n                {\n                    <AddItem\n                        showList={showList}\n                        setShowList={setShowList}\n                        progress={progress}\n                        totalAmount={totalAmount}\n                    />\n                }\n\n\n                <div className=\"row\">\n                    <div className={`col-lg-6`}>\n                        <Board totalAmount={totalAmount} progress={progress} />\n                    </div>\n\n                    <div className={` mt-sm-2 ${expandList ? 'col-lg-12' : 'col-lg-6'}`}>\n\n                        {\n                            expenseStore.expenses && expenseStore.expenses.length > 0 ?\n                                showList &&\n                                <TrackerList expandList={expandList} setExpandList={setExpandList}/>\n\n                                : <div className=\"alert alert-info\">What are you thinking, Add your first expense? 😉</div>\n                        }\n\n                    </div>\n\n\n                </div>\n\n            </div>\n\n        </section>\n    )\n}\n\nexport default observer(Tracker);","import Footer from 'components/shared/Footer';\nimport Header from 'components/shared/Header';\nimport Tracker from 'components/tracker/Tracker';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <section className=\"section-highlight-area\">\n        <div className=\"container\">\n         <h3>Track your expenses! 💸</h3><p>Keeping track of your expenses is an important part of managing your overall finances.</p>\n        </div>\n      </section>\n      <Tracker></Tracker>\n\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}